<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一剑破光阴</title>
  
  <subtitle>个人博客</subtitle>
  <link href="https://wangyuxuan66.github.io/atom.xml" rel="self"/>
  
  <link href="https://wangyuxuan66.github.io/"/>
  <updated>2021-07-02T09:30:50.000Z</updated>
  <id>https://wangyuxuan66.github.io/</id>
  
  <author>
    <name>Mr Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nodejs 下载安装步骤（Windows环境）</title>
    <link href="https://wangyuxuan66.github.io/posts/181298691/"/>
    <id>https://wangyuxuan66.github.io/posts/181298691/</id>
    <published>2021-06-24T02:42:57.000Z</published>
    <updated>2021-07-02T09:30:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇文章详细介绍了Node.js下载与安装方法</p> <span id="more"></span><h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><h4 id="1、官网地址"><a href="#1、官网地址" class="headerlink" title="1、官网地址"></a>1、官网地址</h4><p><span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNuL2Rvd25sb2FkLw==">Nodejs下载<i class="fa fa-external-link-alt"></i></span></p><h4 id="2、直接点击Windows安装包下载，或者点击64-bit下载“node-v14-18-1-x64-msi”-msi是Windows-installer开发出来的程序安装文件，用于安装，修改，卸载该文件"><a href="#2、直接点击Windows安装包下载，或者点击64-bit下载“node-v14-18-1-x64-msi”-msi是Windows-installer开发出来的程序安装文件，用于安装，修改，卸载该文件" class="headerlink" title="2、直接点击Windows安装包下载，或者点击64-bit下载“node-v14.18.1-x64.msi”(.msi是Windows installer开发出来的程序安装文件，用于安装，修改，卸载该文件)"></a>2、直接点击Windows安装包下载，或者点击64-bit下载“node-v14.18.1-x64.msi”(.msi是Windows installer开发出来的程序安装文件，用于安装，修改，卸载该文件)</h4><p><img src="/posts/181298691/1.jpg"> </p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><h4 id="1、在下载路径中找到“node-v14-18-1-x64-msi”，双击安装，此页面意思大致为“欢迎使用安装向导”；"><a href="#1、在下载路径中找到“node-v14-18-1-x64-msi”，双击安装，此页面意思大致为“欢迎使用安装向导”；" class="headerlink" title="1、在下载路径中找到“node-v14.18.1-x64.msi”，双击安装，此页面意思大致为“欢迎使用安装向导”；"></a>1、在下载路径中找到“node-v14.18.1-x64.msi”，双击安装，此页面意思大致为“欢迎使用安装向导”；</h4><p><img src="/posts/181298691/2.jpg"> </p><h4 id="2、阅读用户许可协议，完成后勾选我接受许可协议，点击“Next”前往下个页面；"><a href="#2、阅读用户许可协议，完成后勾选我接受许可协议，点击“Next”前往下个页面；" class="headerlink" title="2、阅读用户许可协议，完成后勾选我接受许可协议，点击“Next”前往下个页面；"></a>2、阅读用户许可协议，完成后勾选我接受许可协议，点击“Next”前往下个页面；</h4><p><img src="/posts/181298691/3.png"> </p><h4 id="3、选择安装位置默认为“C-Program-Files-nodejs-”，这里更换为“E-nodejs-”，点击“Next”前往下个页面；"><a href="#3、选择安装位置默认为“C-Program-Files-nodejs-”，这里更换为“E-nodejs-”，点击“Next”前往下个页面；" class="headerlink" title="3、选择安装位置默认为“C:\Program Files\nodejs\”，这里更换为“E:\nodejs\”，点击“Next”前往下个页面；"></a>3、选择安装位置默认为“C:\Program Files\nodejs\”，这里更换为“E:\nodejs\”，点击“Next”前往下个页面；</h4><p><img src="/posts/181298691/4.png"> </p><h4 id="4、自定义设置，按需修改，这里默认点击“Next”前往下个页面；"><a href="#4、自定义设置，按需修改，这里默认点击“Next”前往下个页面；" class="headerlink" title="4、自定义设置，按需修改，这里默认点击“Next”前往下个页面；"></a>4、自定义设置，按需修改，这里默认点击“Next”前往下个页面；</h4><p><img src="/posts/181298691/5.png"> </p><h4 id="5、勾选自动安装必要工具，点击“Next”前往下个页面；"><a href="#5、勾选自动安装必要工具，点击“Next”前往下个页面；" class="headerlink" title="5、勾选自动安装必要工具，点击“Next”前往下个页面；"></a>5、勾选自动安装必要工具，点击“Next”前往下个页面；</h4><p><img src="/posts/181298691/6.jpg"> </p><h4 id="6、最终确认，准备安装Node-Js，点击“Install”开始安装；"><a href="#6、最终确认，准备安装Node-Js，点击“Install”开始安装；" class="headerlink" title="6、最终确认，准备安装Node.Js，点击“Install”开始安装；"></a>6、最终确认，准备安装Node.Js，点击“Install”开始安装；</h4><p><img src="/posts/181298691/7.jpg"> </p><h4 id="7、安装中；"><a href="#7、安装中；" class="headerlink" title="7、安装中；"></a>7、安装中；</h4><p><img src="/posts/181298691/8.jpg">     </p><h4 id="8、安装完成，点击“Finish”退出安装向导；"><a href="#8、安装完成，点击“Finish”退出安装向导；" class="headerlink" title="8、安装完成，点击“Finish”退出安装向导；"></a>8、安装完成，点击“Finish”退出安装向导；</h4><p><img src="/posts/181298691/9.jpg"> </p><h4 id="9、为“Node-js”安装额外工具，任意键继续，可按回车两次（此为窗口自动打开，第五步不勾选则不会弹出该窗口）；"><a href="#9、为“Node-js”安装额外工具，任意键继续，可按回车两次（此为窗口自动打开，第五步不勾选则不会弹出该窗口）；" class="headerlink" title="9、为“Node.js”安装额外工具，任意键继续，可按回车两次（此为窗口自动打开，第五步不勾选则不会弹出该窗口）；"></a>9、为“Node.js”安装额外工具，任意键继续，可按回车两次（此为窗口自动打开，第五步不勾选则不会弹出该窗口）；</h4><p><img src="/posts/181298691/10.jpg"> </p><h4 id="10、程序会自动打开shell窗口，自动下载安装相关程序，请耐心等待；"><a href="#10、程序会自动打开shell窗口，自动下载安装相关程序，请耐心等待；" class="headerlink" title="10、程序会自动打开shell窗口，自动下载安装相关程序，请耐心等待；"></a>10、程序会自动打开shell窗口，自动下载安装相关程序，请耐心等待；</h4><p><img src="/posts/181298691/11.jpg"> </p><h4 id="11、安装完成后，打开cmd终端，输入“node-v”查看node版本，输入“npm-v”查看npm版本，有显示表示安装成功。"><a href="#11、安装完成后，打开cmd终端，输入“node-v”查看node版本，输入“npm-v”查看npm版本，有显示表示安装成功。" class="headerlink" title="11、安装完成后，打开cmd终端，输入“node -v”查看node版本，输入“npm -v”查看npm版本，有显示表示安装成功。"></a>11、安装完成后，打开cmd终端，输入“node -v”查看node版本，输入“npm -v”查看npm版本，有显示表示安装成功。</h4><p><img src="/posts/181298691/12.jpg"> </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇文章详细介绍了Node.js下载与安装方法&lt;/p&gt;</summary>
    
    
    
    <category term="Nodejs" scheme="https://wangyuxuan66.github.io/categories/Nodejs/"/>
    
    
    <category term="Nodejs" scheme="https://wangyuxuan66.github.io/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Git 的安装教程（详解每个步骤）</title>
    <link href="https://wangyuxuan66.github.io/posts/3065862484/"/>
    <id>https://wangyuxuan66.github.io/posts/3065862484/</id>
    <published>2021-06-08T06:48:15.000Z</published>
    <updated>2021-10-10T10:25:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Git是众博友使用频率较高的一款软件，本篇文章主要介绍Git的下载与安装。</p> <span id="more"></span><h3 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h3><h4 id="1、下载Git"><a href="#1、下载Git" class="headerlink" title="1、下载Git"></a>1、下载Git</h4><p>登陆git官网：<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">Git官网<i class="fa fa-external-link-alt"></i></span> 点击下载</p><p>  <img src="/posts/3065862484/1.png"></p><h4 id="2、跳转到下载页面，如果没有下载任务，可以选择点击蓝色字体，根据需求下载（一般点击”Git-for-Windows-Setup下面“64-bit-Git-for-Windows-Setup”进行下载）"><a href="#2、跳转到下载页面，如果没有下载任务，可以选择点击蓝色字体，根据需求下载（一般点击”Git-for-Windows-Setup下面“64-bit-Git-for-Windows-Setup”进行下载）" class="headerlink" title="2、跳转到下载页面，如果没有下载任务，可以选择点击蓝色字体，根据需求下载（一般点击”Git for Windows Setup下面“64-bit Git for Windows Setup”进行下载）"></a>2、跳转到下载页面，如果没有下载任务，可以选择点击蓝色字体，根据需求下载（一般点击”Git for Windows Setup下面“64-bit Git for Windows Setup”进行下载）</h4><p><img src="/posts/3065862484/2.png"> </p><p>以上为官网下载，速度比较慢，但是安全，大家也可以在网上搜索下载，这里就不具体描述了（注:非官网下载有一定风险）</p><h4 id="3、我下载的版本是-Git-2-33-0-2-64-bit-exe，接下来我们就对这个版本进行安装工作"><a href="#3、我下载的版本是-Git-2-33-0-2-64-bit-exe，接下来我们就对这个版本进行安装工作" class="headerlink" title="3、我下载的版本是 Git-2.33.0.2-64-bit.exe，接下来我们就对这个版本进行安装工作"></a>3、我下载的版本是 Git-2.33.0.2-64-bit.exe，接下来我们就对这个版本进行安装工作</h4><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><h4 id="1、在下载路径中找到以下图标，双击安装"><a href="#1、在下载路径中找到以下图标，双击安装" class="headerlink" title="1、在下载路径中找到以下图标，双击安装"></a>1、在下载路径中找到以下图标，双击安装</h4><p><img src="/posts/3065862484/3.png"></p><h4 id="2、该界面介绍了介绍萨达所群介绍萨达所群介绍是是是GNU通用公共许可协议相关信息，感兴趣的同学可以详细阅读一下，点击“Next”进入下个页面"><a href="#2、该界面介绍了介绍萨达所群介绍萨达所群介绍是是是GNU通用公共许可协议相关信息，感兴趣的同学可以详细阅读一下，点击“Next”进入下个页面" class="headerlink" title="2、该界面介绍了介绍萨达所群介绍萨达所群介绍是是是GNU通用公共许可协议相关信息，感兴趣的同学可以详细阅读一下，点击“Next”进入下个页面"></a>2、该界面介绍了介绍萨达所群介绍萨达所群介绍是是是GNU通用公共许可协议相关信息，感兴趣的同学可以详细阅读一下，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/4.png"> </p><h4 id="3、选择安装目录-点击-“Browse…”-更换，默认路径为“C-Program-Files-Git“”，本次安装到“E-Git”，然后点击“Next”进入下个页面"><a href="#3、选择安装目录-点击-“Browse…”-更换，默认路径为“C-Program-Files-Git“”，本次安装到“E-Git”，然后点击“Next”进入下个页面" class="headerlink" title="3、选择安装目录,点击 “Browse…” 更换，默认路径为“C:\Program Files\Git“”，本次安装到“E:\Git”，然后点击“Next”进入下个页面"></a>3、选择安装目录,点击 “Browse…” 更换，默认路径为“C:\Program Files\Git“”，本次安装到“E:\Git”，然后点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/5.png"> </p><h4 id="4、选择组件，一般只需点击Additional-icons（添加图标到桌面）其他都是默认勾选的，然后点击“Next”进入下个页面"><a href="#4、选择组件，一般只需点击Additional-icons（添加图标到桌面）其他都是默认勾选的，然后点击“Next”进入下个页面" class="headerlink" title="4、选择组件，一般只需点击Additional icons（添加图标到桌面）其他都是默认勾选的，然后点击“Next”进入下个页面"></a>4、选择组件，一般只需点击Additional icons（添加图标到桌面）其他都是默认勾选的，然后点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/6.png"> </p><h4 id="5、创建开始菜单目录，点击“Next”进入下个页面，Don’t-create-a-Start-Menu-folder-不添加到开始菜单-不用勾选"><a href="#5、创建开始菜单目录，点击“Next”进入下个页面，Don’t-create-a-Start-Menu-folder-不添加到开始菜单-不用勾选" class="headerlink" title="5、创建开始菜单目录，点击“Next”进入下个页面，Don’t create a Start Menu folder(不添加到开始菜单)不用勾选"></a>5、创建开始菜单目录，点击“Next”进入下个页面，Don’t create a Start Menu folder(不添加到开始菜单)不用勾选</h4><p><img src="/posts/3065862484/7.png"> </p><h4 id="6、选择Git使用的默认编辑器，默认即可（GIt提供多种编辑器，这里不详细介绍了），点击“Next”进入下个页面"><a href="#6、选择Git使用的默认编辑器，默认即可（GIt提供多种编辑器，这里不详细介绍了），点击“Next”进入下个页面" class="headerlink" title="6、选择Git使用的默认编辑器，默认即可（GIt提供多种编辑器，这里不详细介绍了），点击“Next”进入下个页面"></a>6、选择Git使用的默认编辑器，默认即可（GIt提供多种编辑器，这里不详细介绍了），点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/8.png"> </p><h4 id="7、初始化新项目-仓库-名称，默认即可（也可以自定义），点击“Next”进入下个页面"><a href="#7、初始化新项目-仓库-名称，默认即可（也可以自定义），点击“Next”进入下个页面" class="headerlink" title="7、初始化新项目(仓库)名称，默认即可（也可以自定义），点击“Next”进入下个页面"></a>7、初始化新项目(仓库)名称，默认即可（也可以自定义），点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/9.png"> </p><h4 id="8、配置PATH环境，一般默认即可，点击“Next”进入下个页面"><a href="#8、配置PATH环境，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="8、配置PATH环境，一般默认即可，点击“Next”进入下个页面"></a>8、配置PATH环境，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/10.png"> </p><h4 id="9、选择SSH可执行文件，一般默认即可，点击“Next”进入下个页面"><a href="#9、选择SSH可执行文件，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="9、选择SSH可执行文件，一般默认即可，点击“Next”进入下个页面"></a>9、选择SSH可执行文件，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/11.png"> </p><h4 id="10、选择HTTPS传输后端，一般默认即可，点击“Next”进入下个页面"><a href="#10、选择HTTPS传输后端，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="10、选择HTTPS传输后端，一般默认即可，点击“Next”进入下个页面"></a>10、选择HTTPS传输后端，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/12.png"> </p><h4 id="11、配置行结束转换，一般默认即可，点击“Next”进入下个页面"><a href="#11、配置行结束转换，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="11、配置行结束转换，一般默认即可，点击“Next”进入下个页面"></a>11、配置行结束转换，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/13.png"> </p><h4 id="12、选择Git-Bash使用的终端模拟器，一般默认即可，点击“Next”进入下个页面"><a href="#12、选择Git-Bash使用的终端模拟器，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="12、选择Git Bash使用的终端模拟器，一般默认即可，点击“Next”进入下个页面"></a>12、选择Git Bash使用的终端模拟器，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/14.png"> </p><h4 id="13、选择默认的”git-pull”行为，一般默认即可，点击“Next”进入下个页面"><a href="#13、选择默认的”git-pull”行为，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="13、选择默认的”git pull”行为，一般默认即可，点击“Next”进入下个页面"></a>13、选择默认的”git pull”行为，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/15.png"> </p><h4 id><a href="#" class="headerlink" title></a></h4><h4 id="14、选择一个凭证程序，一般默认即可，点击“Next”进入下个页面"><a href="#14、选择一个凭证程序，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="14、选择一个凭证程序，一般默认即可，点击“Next”进入下个页面"></a>14、选择一个凭证程序，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/16.png"> </p><h4 id="15、配置额外的选项，一般默认即可，点击“Next”进入下个页面"><a href="#15、配置额外的选项，一般默认即可，点击“Next”进入下个页面" class="headerlink" title="15、配置额外的选项，一般默认即可，点击“Next”进入下个页面"></a>15、配置额外的选项，一般默认即可，点击“Next”进入下个页面</h4><p><img src="/posts/3065862484/17.png"> </p><h4 id="16、配置实现性选项，一般默认即可，点击“Install”开始安装"><a href="#16、配置实现性选项，一般默认即可，点击“Install”开始安装" class="headerlink" title="16、配置实现性选项，一般默认即可，点击“Install”开始安装"></a>16、配置实现性选项，一般默认即可，点击“Install”开始安装</h4><p><img src="/posts/3065862484/18.png"> </p><h4 id="17、安装中"><a href="#17、安装中" class="headerlink" title="17、安装中"></a>17、安装中</h4><p><img src="/posts/3065862484/19.png"> </p><h4 id="18、点击“Finish”完成安装"><a href="#18、点击“Finish”完成安装" class="headerlink" title="18、点击“Finish”完成安装"></a>18、点击“Finish”完成安装</h4><p><img src="/posts/3065862484/20.png"> </p><h4 id="19、完成安装后，桌面出现以下图标-，右键看到Git-GUI-Here和Git-Bash-Here就说明成功啦"><a href="#19、完成安装后，桌面出现以下图标-，右键看到Git-GUI-Here和Git-Bash-Here就说明成功啦" class="headerlink" title="19、完成安装后，桌面出现以下图标 ，右键看到Git GUI Here和Git Bash Here就说明成功啦"></a>19、完成安装后，桌面出现以下图标 ，右键看到Git GUI Here和Git Bash Here就说明成功啦</h4><p> <img src="/posts/3065862484/21.png"></p><h4 id="20、Git-功能有很多，本人用的最多的就是-Git-Bash"><a href="#20、Git-功能有很多，本人用的最多的就是-Git-Bash" class="headerlink" title="20、Git 功能有很多，本人用的最多的就是 Git Bash"></a>20、Git 功能有很多，本人用的最多的就是 Git Bash</h4><p><img src="/posts/3065862484/22.png"> </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Git是众博友使用频率较高的一款软件，本篇文章主要介绍Git的下载与安装。&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://wangyuxuan66.github.io/categories/Git/"/>
    
    
    <category term="git" scheme="https://wangyuxuan66.github.io/tags/git/"/>
    
    <category term="github" scheme="https://wangyuxuan66.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>走进Liunx</title>
    <link href="https://wangyuxuan66.github.io/posts/198479022/"/>
    <id>https://wangyuxuan66.github.io/posts/198479022/</id>
    <published>2020-02-10T07:51:21.000Z</published>
    <updated>2020-05-17T09:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多博友或多或少都接触过Linux操作系统，本篇文章带大家深入了解Liunx。</p> <span id="more"></span><h3 id="一、Linux-简介"><a href="#一、Linux-简介" class="headerlink" title="一、Linux 简介"></a>一、Linux 简介</h3><p>Linux操作系统是基于UNIX操作系统发展而来的一种克隆系统，它诞生于1991 年的 [Linux桌面] 10 月5 日（这是第一次正式向外公布的时间）。以后借助于Internet网络，并通过全世界各地计算机爱好者的共同努力，已成为今天世界上使用最多的一种UNIX 类操作系统，并且使用人数还在迅猛增长。</p><p><img src="/posts/198479022/1.jpg"></p>   <center>图源360百科</center><p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。它主要用于基于Intel x86系列CPU的计算机上。这个系统是由全世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的Unix兼容产品。</p><h3 id="二、Linux之父"><a href="#二、Linux之父" class="headerlink" title="二、Linux之父"></a>二、Linux之父</h3><p>林纳斯·本纳第克特·托瓦兹(Linus Benedict Torvalds, 1969年~ )，著名的电脑程序员、黑客。Linux内核的发明人及该计划的合作者。托瓦兹利用个人时间及器材创造出了这套当今全球最流行的操作系统(作业系统)内核之一。现受聘于开放源代码开发实验室(OSDL:Open Source Development Labs, Inc)，全力开发Linux内核。</p><p>​                                                                   <img src="/posts/198479022/2.png"></p>   <center>图源360百科</center><p>“有些人生来就具有统率百万人的领袖风范;另一些人则是为写出颠覆世界的软件而生。唯一一个能同时做到这两者的人，就是托瓦兹。”美国《时代》周刊对”Linux之父”林纳斯·托瓦兹(Linus Torvalds)给出了极高的评价。甚至，在《时代》周刊根据读者投票评选出的二十世纪100位最重要人物中，林纳斯居然排到了第15位，而从20世纪的最后几年就开始霸占全球首富称号的盖茨不过才是第17位。</p><h3 id="三、常见Linux发行版本（介绍顺序不分先后）"><a href="#三、常见Linux发行版本（介绍顺序不分先后）" class="headerlink" title="三、常见Linux发行版本（介绍顺序不分先后）"></a>三、常见Linux发行版本（介绍顺序不分先后）</h3><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><p>Ubuntu是基于Debian GNU/Linux，支持x86、amd64(即x64)和ppc架构，由全球化的专业开发团队(Canonical Ltd)打造的开源GNU/Linux操作系统。Ubuntu对GNU/Linux的普及特别是桌面普及作出了巨大贡献，由此使更多人共享开源的成果与精彩。<br>Ubuntu是一个南非的民族观念，该词来自于祖鲁语和科萨语，意为人们之间的忠诚和联系。被视为非洲人的传统理念，也是建立新南非共和国的基本原则之一，与非洲复兴的理想密切相关。Ubuntu 精神的大意是”人道待人”。另一种翻译可以是:”天下共享的信念，连接起每个人”。</p><p><img src="/posts/198479022/3.jpg"></p>   <center>图源360百科</center><p>Ubuntu每6个月发布一个新版本，而每个版本都有代号和版本号。版本号基于发布日期，例如第一个版本，4.10，代表是在2004年10月发行的。</p><h4 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h4><p>CentOS是免费的、开源的、可以重新分发的开源操作系统 ，CentOS(Community Enterprise Operating System，中文意思是社区企业操作系统)是Linux发行版之一。</p><p>​                                                         </p><p><img src="/posts/198479022/4.png"></p>   <center>图源360百科</center><p>CentOS Linux发行版是一个稳定的，可预测的，可管理的和可复现的平台，源于Red Hat Enterprise Linux(RHEL)依照开放源代码(大部分是GPL开源协议 )规定释出的源码所编译而成。<br>每个版本的 CentOS都会获得十年的支持(通过安全更新方式)，新版本的 CentOS 大约每两年发行一次。而每个版本的 CentOS 会定期(大概每六个月)更新一次，以便支持新的硬件。通过这样建立一个安全、低维护、稳定、高预测性、高重复性的 Linux 环境。</p><h4 id="Red-Hat"><a href="#Red-Hat" class="headerlink" title="Red Hat"></a>Red Hat</h4><p>Red Hat(红帽)公司(NYSE:RHT)是一家开源解决方案供应商，红帽公司为诸多重要IT技术如操作系统、存储、中间件、虚拟化和云计算提供关键任务的软件与服务。红帽的开放源码模式提供跨物理、虚拟和云端环境的企业运算解决方案，以帮助企业降低成本并提升效能、稳定性与安全性。红帽公司同时也为全球客户或通过领先合作伙伴为客户提供技术支持、培训和咨询服务。</p><p><img src="/posts/198479022/5.jpg"></p>   <center>图源360百科</center><p>Redhat有两大Linux产品系列，其中是免费的Fedora Core系列主要用于桌面版本，提供了更多新特性的支持。另外一个产品系列是收费的Enterprise系列，即RHEL（Redhat Enterprise Linux）</p><h4 id="Debin"><a href="#Debin" class="headerlink" title="Debin"></a>Debin</h4><p>Debian：计划是一个致力于创建一个自由操作系统的合作组织。创建的这个操作系统名为 Debian GNU/Linux，简称为 Debian。操作系统是使计算机运行的基本程序和工具的集合，其中最主要的部分称为内核（kernel)。内核是计算机中最重要的程序，负责一切基本的调度工作，并让您运行其他程序。</p><p><img src="/posts/198479022/6.png"></p>   <center>图源360百科</center><p>广义的Debian是指一个致力于创建自由操作系统的合作组织及其作品，由于Debian项目众多内核分支中以Linux宏内核为主，而且 Debian开发者 所创建的操作系统中绝大部分基础工具来自于GNU工程 ，因此 “Debian” 常指Debian GNU/Linux。</p><p>Debian的发行及其软件源有五个分支:旧稳定分支(oldstable)、稳定分支(stable)、测试分支(testing)、不稳定分支(unstable)、实验分支(experimental)。</p><p>发行生命周期<br>Debian 通常会按照一定的规律每隔一段时间发布一个新稳定版。 对每个稳定发行版本，用户可以得到三年的完整支持以及额外两年的长期支持。</p><h4 id="SUSE"><a href="#SUSE" class="headerlink" title="SUSE"></a>SUSE</h4><p>SUSE Linux 原来是德国的 SuSE Linux AG公司发行维护的Linux发行版，是属于此公司的注册商标。2004年这家公司被Novell公司收购。openSUSE 项目是由 Novell 发起的开源社区计划。旨在推进 Linux 的广泛使用。openSUSE是Novell的开源Linux项目，旨在推进 Linux 的广泛使用。该项目为 Linux开发者和爱好者提供了开始使用 Linux 所需要的一切。openSUSE 原名 SUSE Linux，10.2版本以后改名为openSUSE。</p><p><img src="/posts/198479022/7.jpg"></p>   <center>图源360百科</center><p>openSUSE项目的目标是使 SUSE Linux 成为所有人都能够得到的最易于使用的 Linux 发行版，同时努力使其成为使用最广泛的开放源代码平台。为开放源代码合作者提供一个环境来把 SUSE Linux 建设成世界上最好的 Linux 发行版，不论是为新用户或者有经验的 Linux 用户。大大简化并开放开发和打包流程，以使 openSUSE 成为 Linux 黑客和应用软件开发者的首选平台。</p><h4 id="SlackwareLinux"><a href="#SlackwareLinux" class="headerlink" title="SlackwareLinux"></a>SlackwareLinux</h4><p>SlackwareLinux是由Patrick Volkerding制作的GNU/Linux发行版，它是世界上依然存活的最久的Linux发行版，在它的辉煌时期，曾经在所有发行版中拥有最多的用户数量。但是，随着 Linux商业化的浪潮，Redhat、Mandrake 和Suse 这些产品通过大规模的商业推广，占据了广大的市场；Debian作为一个社区发行版，也拥有很大的用户群。相比之下，Slackware的不事声张，使得它从许多人（尤其是使用Linux的新用户）的视野中消失了。</p><p><img src="/posts/198479022/8.png"></p>   <center>图源360百科</center><h3 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h3><p>一个典型的Linux发行版包括：Linux核心，一些GNU库和工具，命令行shell，图形界面的X窗口系统和相应的桌面环境，如KDE或GNOME，并包含数千种从办公包，编译器，文本编辑器到科学工具的应用软件。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很多博友或多或少都接触过Linux操作系统，本篇文章带大家深入了解Liunx。&lt;/p&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://wangyuxuan66.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="系统运维" scheme="https://wangyuxuan66.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    <category term="Linux" scheme="https://wangyuxuan66.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络基础</title>
    <link href="https://wangyuxuan66.github.io/posts/2595394334/"/>
    <id>https://wangyuxuan66.github.io/posts/2595394334/</id>
    <published>2019-04-22T03:22:05.000Z</published>
    <updated>2019-08-11T02:37:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多博友对计算机网络感到陌生，本篇文章为大家介绍计算机网络的基础知识。</p> <span id="more"></span><h3 id="一、TCP-IP-协议"><a href="#一、TCP-IP-协议" class="headerlink" title="一、TCP/IP 协议"></a>一、TCP/IP 协议</h3><p><img src="/posts/2595394334/1.png"></p>   <center>图源360百科</center><center>注：左侧 OSI模型 中间TCP\IP模型 右侧 每层对应的协议</center><h4 id="1、OSI模型"><a href="#1、OSI模型" class="headerlink" title="1、OSI模型"></a>1、OSI模型</h4><p>OSI模型，即开放式通信系统互联参考模型(Open System Interconnection,OSI/RM,Open Systems Interconnection Reference Model)，是国际标准化组织(ISO)提出的一个试图使各种计算机在世界范围内互连为网络的标准框架，简称OSI。这是一种事实上被TCP/IP 4层模型淘汰的协议。在当今世界上没有大规模使用。</p><h4 id="2、TCP-IP-是基于-TCP-和-IP-这两个最初的协议之上的不同的通信协议的大的集合。"><a href="#2、TCP-IP-是基于-TCP-和-IP-这两个最初的协议之上的不同的通信协议的大的集合。" class="headerlink" title="2、TCP/IP 是基于 TCP 和 IP 这两个最初的协议之上的不同的通信协议的大的集合。"></a>2、TCP/IP 是基于 TCP 和 IP 这两个最初的协议之上的不同的通信协议的大的集合。</h4><h5 id="1）TCP"><a href="#1）TCP" class="headerlink" title="1）TCP"></a>1）TCP</h5><p>TCP 用于从应用程序到网络的数据传输控制。<br>TCP 负责在数据传送之前将它们分割为 IP 包，然后在它们到达的时候将它们重组。</p><h5 id="2）IP-网际协议"><a href="#2）IP-网际协议" class="headerlink" title="2）IP-网际协议"></a>2）IP-网际协议</h5><p>IP 负责计算机之间的通信。<br>IP 负责在因特网上发送和接收数据包。</p><h3 id="二、TCP-IP协议中主机与主机之间通信的三要素"><a href="#二、TCP-IP协议中主机与主机之间通信的三要素" class="headerlink" title="二、TCP/IP协议中主机与主机之间通信的三要素"></a>二、TCP/IP协议中主机与主机之间通信的三要素</h3><table><thead><tr><th align="center"></th><th align="center">主机通信三要素</th><th></th></tr></thead><tbody><tr><td align="center">IP地址</td><td align="center">子网掩码</td><td>网关</td></tr></tbody></table><h4 id="1、IP地址"><a href="#1、IP地址" class="headerlink" title="1、IP地址"></a>1、IP地址</h4><p>IP地址是一个32位的二进制数，通常被分割为4个“8位二进制数”（也就是4个字节）。IP地址通常用“点分十进制”表示成（a.b.c.d）的形式，其中，a,b,c,d都是0~255之间的十进制整数。例：点分十进IP地址（100.4.5.6），实际上是32位二进制数（01100100.00000100.00000101.00000110）。</p><h5 id="1）分类"><a href="#1）分类" class="headerlink" title="1）分类"></a>1）分类</h5><p>IP地址（英语：Internet Protocol Address）是一种在Internet上的给主机编址的方式，也称为网际协议地址。常见的IP地址，分为IPv4与IPv6两大类。</p><h5 id="2）编址"><a href="#2）编址" class="headerlink" title="2）编址"></a>2）编址</h5><p>IP地址编址方案：IP地址编址方案将IP地址空间划分为A、B、C、D、E五类，其中A、B、C是基本类，D、E类作为多播和保留使用。<br>A类1-127<br>B类128-191<br>C类192-223<br>D类224-239组播(多播)<br>E类240-254科研</p><h4 id="2、子网掩码"><a href="#2、子网掩码" class="headerlink" title="2、子网掩码"></a>2、子网掩码</h4><p>子网掩码(subnet mask)又叫网络掩码、地址掩码、子网络遮罩，它是一种用来指明一个IP地址的哪些位标识的是主机所在的子网，以及哪些位标识的是主机的位掩码。子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成网络地址和主机地址两部分。<br>子网掩码是一个32位地址，用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。</p><h5 id="1）常用的A、B、C三类IP地址的默认子网掩码"><a href="#1）常用的A、B、C三类IP地址的默认子网掩码" class="headerlink" title="1）常用的A、B、C三类IP地址的默认子网掩码"></a>1）常用的A、B、C三类IP地址的默认子网掩码</h5><p>A类255.0.0.0<br>B类255.255.0.0<br>C类255.255.255.0</p><h4 id="3、网关"><a href="#3、网关" class="headerlink" title="3、网关"></a>3、网关</h4><p>网关(Gateway)又称网间连接器、协议转换器。网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关既可以用于广域网互连，也可以用于局域网互连。 网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。与网桥只是简单地传达信息不同，网关对收到的信息要重新打包，以适应目的系统的需求。同时，网关也可以提供过滤和安全功能。大多数网关运行在OSI 7层协议的顶层–应用层。</p><h3 id="三、查看当前主机IP地址、子网掩码、网关"><a href="#三、查看当前主机IP地址、子网掩码、网关" class="headerlink" title="三、查看当前主机IP地址、子网掩码、网关"></a>三、查看当前主机IP地址、子网掩码、网关</h3><h4 id="1、通过Windows-R快捷键可以打开“运行窗口”，在“窗口”中输入“cmd”，点击“确定”打开终端。"><a href="#1、通过Windows-R快捷键可以打开“运行窗口”，在“窗口”中输入“cmd”，点击“确定”打开终端。" class="headerlink" title="1、通过Windows+R快捷键可以打开“运行窗口”，在“窗口”中输入“cmd”，点击“确定”打开终端。"></a>1、通过Windows+R快捷键可以打开“运行窗口”，在“窗口”中输入“cmd”，点击“确定”打开终端。</h4><p><img src="/posts/2595394334/2.png"></p><h4 id="2、输入以下命令-ipconfig-回车确认"><a href="#2、输入以下命令-ipconfig-回车确认" class="headerlink" title="2、输入以下命令 ipconfig 回车确认"></a>2、输入以下命令 ipconfig 回车确认</h4><p><img src="/posts/2595394334/3.png"></p><h4 id="3、找到网络适配器，我的是无线网卡，红框内分别是IP地址（IPV4、IPV6）、子网掩码、网关"><a href="#3、找到网络适配器，我的是无线网卡，红框内分别是IP地址（IPV4、IPV6）、子网掩码、网关" class="headerlink" title="3、找到网络适配器，我的是无线网卡，红框内分别是IP地址（IPV4、IPV6）、子网掩码、网关"></a>3、找到网络适配器，我的是无线网卡，红框内分别是IP地址（IPV4、IPV6）、子网掩码、网关</h4><p><img src="/posts/2595394334/4.png"></p><h3 id="四、检测主机是否连网"><a href="#四、检测主机是否连网" class="headerlink" title="四、检测主机是否连网"></a>四、检测主机是否连网</h3><p>检测是否连接到互联网，使用 ping 命令，ping <span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20v">www.baidu.com<i class="fa fa-external-link-alt"></i></span> 有回复说明已连接</p><p><img src="/posts/2595394334/5.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很多博友对计算机网络感到陌生，本篇文章为大家介绍计算机网络的基础知识。&lt;/p&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://wangyuxuan66.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="系统运维" scheme="https://wangyuxuan66.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    <category term="网络" scheme="https://wangyuxuan66.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>认识服务器</title>
    <link href="https://wangyuxuan66.github.io/posts/3265820773/"/>
    <id>https://wangyuxuan66.github.io/posts/3265820773/</id>
    <published>2018-09-22T03:28:00.000Z</published>
    <updated>2018-12-10T09:30:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多博友对服务器感到陌生，本篇文章带大家揭开服务器神秘的面纱。</p> <span id="more"></span><h2 id="一、服务器定义"><a href="#一、服务器定义" class="headerlink" title="一、服务器定义"></a>一、服务器定义</h2><p>服务器，也称伺服器，是提供计算服务的设备。由于服务器需要响应服务请求，并进行处理，因此一般来说服务器应具备承担服务并且保障服务的能力。</p><p>服务器的构成包括处理器、硬盘、内存、系统总线等，和通用的计算机架构类似，但是由于需要提供高可靠的服务，因此在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。</p><h2 id="二、服务器分类"><a href="#二、服务器分类" class="headerlink" title="二、服务器分类"></a>二、服务器分类</h2><p>按服务器的机箱结构来划分，可以把服务器划分为”台式服务器”、”机架式服务器”、”机柜式服务器” 和”刀片式服务器”四类。</p><h3 id="1、台式服务器"><a href="#1、台式服务器" class="headerlink" title="1、台式服务器"></a>1、台式服务器</h3><p>台式服务器也称为”塔式服务器”。有的台式服务器采用大小与普通立式计算机大致相当的机箱，有的采用大容量的机箱，像个硕大的柜子。低档服务器由于功能较弱，整个服务器的内部结构比较简单，所以机箱不大，都采用台式机箱结构。这里所介绍的台式不是平时普通计算机中的台式，立式机箱也属于台式机范围，这类服务器在整个服务器市场中占有相当大的份额。</p><p><img src="/posts/3265820773/1.png"></p>   <center>图源百度百科</center><h3 id="2、机柜式服务器"><a href="#2、机柜式服务器" class="headerlink" title="2、机柜式服务器"></a>2、机柜式服务器</h3><p>在一些高档企业服务器中由于内部结构复杂，内部设备较多，有的还具有许多不同的设备单元或几个服务器都放在一个机柜中，这种服务器就是机柜式服务器。对于证券、银行、邮电等重要企业，则应采用具有完备的故障自修复能力的系统，关键部件应采用冗余措施，对于关键业务使用的服务器也可以采用双机热备份高可用系统或者是高性能计算机，这样的系统可用性就可以得到很好的保证。</p><p><img src="/posts/3265820773/2.png"></p>   <center>图源百度百科</center><h3 id="3、机架式服务器"><a href="#3、机架式服务器" class="headerlink" title="3、机架式服务器"></a>3、机架式服务器</h3><p>机架式服务器的外形看来不像计算机，而像交换机，有1U（1U=1.75英寸）、2U、4U等规格。机架式服务器安装在标准的19英寸机柜里面。这种结构的多为功能型服务器。<br>通常选用机械尺寸符合19英寸工业标准的机架式服务器。机架式服务器也有多种规格，例如1U（4.445cm高）、2U、4U、6U、8U等。通常1U的机架式服务器最节省空间，但性能和可扩展性较差，适合一些业务相对固定的使用领域。4U以上的产品性能较高，可扩展性好，一般支持4个以上的高性能处理器和大量的标准热插拔部件。</p><p><img src="/posts/3265820773/3.png"></p>   <center>图源百度百科</center><h3 id="4、刀片式服务器"><a href="#4、刀片式服务器" class="headerlink" title="4、刀片式服务器"></a>4、刀片式服务器</h3><p>刀片服务器是指在标准高度的机架式机箱内可插装多个卡式的服务器单元，是一种实现HAHD(High Availability High Density，高可用高密度)的低成本服务器平台，为特殊应用行业和高密度计算环境专门设计。刀片服务器就像“刀片”一样，每一块“刀片”实际上就是一块系统主板。</p><p><img src="/posts/3265820773/4.png"></p>   <center>图源百度百科</center><h2 id="三、一句话理解"><a href="#三、一句话理解" class="headerlink" title="三、一句话理解"></a>三、一句话理解</h2><p>服务器是一种管理计算资源的计算机</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很多博友对服务器感到陌生，本篇文章带大家揭开服务器神秘的面纱。&lt;/p&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://wangyuxuan66.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="系统运维" scheme="https://wangyuxuan66.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    <category term="服务器" scheme="https://wangyuxuan66.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>手动添加Git Bash Here到右键菜单 (超详细)</title>
    <link href="https://wangyuxuan66.github.io/posts/228719706/"/>
    <id>https://wangyuxuan66.github.io/posts/228719706/</id>
    <published>2017-05-16T06:28:08.000Z</published>
    <updated>2017-12-10T09:30:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安装好的Git Bash Here在右键菜单中找不到了，本篇文章主要介绍手动添加Git Bash Here到右键菜单的方法。</p> <span id="more"></span><h2 id="1、第一步"><a href="#1、第一步" class="headerlink" title="1、第一步"></a>1、第一步</h2><p>通过Windows+R快捷键可以打开“运行窗口”，在“窗口”中输入“regedit”，点击“确定”打开注册表。</p><p> <img src="/posts/228719706/1.jpg"></p><h2 id="2、第二步"><a href="#2、第二步" class="headerlink" title="2、第二步"></a>2、第二步</h2><p>在搜索栏“计算机”后输入”\HKEY_CLASSES_ROOT\Directory\Background”回车确定或者点击计算机图标逐级查找。</p><p> <img src="/posts/228719706/2.jpg"></p><h2 id="3、第三步"><a href="#3、第三步" class="headerlink" title="3、第三步"></a>3、第三步</h2><p>在“Background”目录下如果没有“shell”,则右键—新建项“shell”。</p><p> <img src="/posts/228719706/3.jpg"></p><h2 id="4、第四步"><a href="#4、第四步" class="headerlink" title="4、第四步"></a>4、第四步</h2><p>在“shell”目录下右键—新建项“open in Git”,其值为“Git Bash Here”,此为右键菜单显示名称。</p><p> <img src="/posts/228719706/4.png"></p><h2 id="5、第五步"><a href="#5、第五步" class="headerlink" title="5、第五步"></a>5、第五步</h2><p>在“open in Git”目录下右键—新建—字符串值“Icon”,双击编辑，其值为“E:\Git\mingw64\share\git\git-for-windows.ico”。需要按照实际安装路径修改，此为菜单加图标。</p><p> <img src="/posts/228719706/5.png"></p><h2 id="6、第六步"><a href="#6、第六步" class="headerlink" title="6、第六步"></a>6、第六步</h2><p>在“open in git”目录下右键—新建—项“command”,其值为 “E:\Git\git-bash.exe”，需要按照实际路径修改。</p><p> <img src="/posts/228719706/6.jpg"></p><h2 id="7、第七步"><a href="#7、第七步" class="headerlink" title="7、第七步"></a>7、第七步</h2><p>右键菜单就可以看到“Git Bash Here”了。</p><p> <img src="/posts/228719706/7.jpg"></p><h2 id="8、第八步"><a href="#8、第八步" class="headerlink" title="8、第八步"></a>8、第八步</h2><p>可以愉快的使用“Git Bash Here”了。</p><p> <img src="/posts/228719706/8.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;安装好的Git Bash Here在右键菜单中找不到了，本篇文章主要介绍手动添加Git Bash Here到右键菜单的方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://wangyuxuan66.github.io/categories/Git/"/>
    
    
    <category term="git" scheme="https://wangyuxuan66.github.io/tags/git/"/>
    
    <category term="github" scheme="https://wangyuxuan66.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Git出现 SSL certificate problem报错的解决方法</title>
    <link href="https://wangyuxuan66.github.io/posts/1200022998/"/>
    <id>https://wangyuxuan66.github.io/posts/1200022998/</id>
    <published>2016-09-08T07:20:56.000Z</published>
    <updated>2016-10-10T09:30:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇文章主要介绍Git出现 SSL certificate problem报错的解决方法</p> <span id="more"></span><h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><p>执行命令的时候，出现“SSL certificate problem：* * *”报错，一般在执行“git push”（推送分支）或者“git clone”（克隆仓库）时出现。原因是因为SSL安全验证问题，不能获取到本地的证书。这里咱们通过不验证SSL证书方式解决。</p><h2 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h2><h3 id="1、第一种"><a href="#1、第一种" class="headerlink" title="1、第一种"></a>1、第一种</h3><p>执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify false</span><br></pre></td></tr></table></figure><p> <img src="/posts/1200022998/1.png"></p><h3 id="2、第二种"><a href="#2、第二种" class="headerlink" title="2、第二种"></a>2、第二种</h3><h4 id="1-找到并打开配置文件"><a href="#1-找到并打开配置文件" class="headerlink" title="1)找到并打开配置文件"></a>1)找到并打开配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  ~/.gitconfig</span><br></pre></td></tr></table></figure><p> <img src="/posts/1200022998/2.png"></p><h4 id="2）将“sslverify”的值改为“false”，注意“-”号两边有空格，保存退出“ZZ”。"><a href="#2）将“sslverify”的值改为“false”，注意“-”号两边有空格，保存退出“ZZ”。" class="headerlink" title="2）将“sslverify”的值改为“false”，注意“=”号两边有空格，保存退出“ZZ”。"></a>2）将“sslverify”的值改为“false”，注意“=”号两边有空格，保存退出“ZZ”。</h4><p> <img src="/posts/1200022998/3.png"></p><h2 id="三、验证"><a href="#三、验证" class="headerlink" title="三、验证"></a>三、验证</h2><p>执行命令 “git config –global –list”，“http.sslverify = false”表示成功</p><p> <img src="/posts/1200022998/4.png"></p><h2 id="四、解决完毕"><a href="#四、解决完毕" class="headerlink" title="四、解决完毕"></a>四、解决完毕</h2><p>可以正常执行“git push”（推送分支）或者“git clone”（克隆仓库）啦！</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇文章主要介绍Git出现 SSL certificate problem报错的解决方法&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://wangyuxuan66.github.io/categories/Git/"/>
    
    
    <category term="git" scheme="https://wangyuxuan66.github.io/tags/git/"/>
    
    <category term="github" scheme="https://wangyuxuan66.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>引言</title>
    <link href="https://wangyuxuan66.github.io/posts/2222320584/"/>
    <id>https://wangyuxuan66.github.io/posts/2222320584/</id>
    <published>2016-06-16T09:24:17.000Z</published>
    <updated>2021-11-10T06:11:46.853Z</updated>
    
    <content type="html"><![CDATA[<p>博主文章，如有错误，烦请评论指正，每天进步一小步,成功前进一大步！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;博主文章，如有错误，烦请评论指正，每天进步一小步,成功前进一大步！&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
